<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FEyFZ1RRREB//9k=
</value>
  </data>
</root>